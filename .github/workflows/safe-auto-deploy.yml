name: Safe Auto Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even during market hours'
        required: false
        default: 'false'
        type: boolean

jobs:
  # Build and push Docker image
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/qsor27/futurestradinglog
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      id: build
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Notify deployment ready - Watchtower will handle actual deployment
  notify-deployment:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Check market hours
      id: market-check
      run: |
        echo "🔍 Checking market hours..."
        
        # Check if it's during market hours (Mon-Fri 9:30AM-4:00PM EST / 14:30-21:00 UTC)
        current_hour=$(date +%H)
        current_day=$(date +%u)  # 1=Monday, 7=Sunday
        is_market_hours=false
        
        if [[ $current_day -ge 1 && $current_day -le 5 ]]; then
          if [[ $current_hour -ge 14 && $current_hour -le 21 ]]; then
            is_market_hours=true
          fi
        fi
        
        echo "is_market_hours=$is_market_hours" >> $GITHUB_OUTPUT
        
        if [[ "$is_market_hours" == "true" && "${{ github.event.inputs.force_deploy }}" != "true" ]]; then
          echo "⚠️ Deployment during market hours detected (Mon-Fri 9:30AM-4:00PM EST)"
          echo "ℹ️ Watchtower will still deploy automatically - use force_deploy=true in workflow_dispatch to override this warning"
        fi
        
        echo "✅ Market hours check completed"
    
    - name: Deployment notification
      run: |
        COMMIT_MSG=$(echo "${{ github.event.head_commit.message }}" | head -1)
        COMMIT_SHA="${{ github.sha }}"
        COMMIT_URL="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
        IMAGE_TAG="${{ needs.build.outputs.image-tag }}"
        
        echo "📦 Docker image built and pushed successfully!"
        echo "🏷️ Image tag: $IMAGE_TAG"
        echo "📝 Commit: $COMMIT_MSG"
        echo "🔗 Commit URL: $COMMIT_URL"
        echo ""
        echo "🤖 Watchtower will automatically deploy this image to production"
        echo "📊 Monitor deployment at: http://localhost:5000/health"
        echo "⏱️ Deployment typically completes within 2-5 minutes"

  # Run basic tests that don't require deployment
  test-build:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run quick tests
      run: |
        echo "🧪 Running quick validation tests..."
        python -c "import app; print('✅ App imports successfully')"
        python -c "from TradingLog_db import FuturesDB; print('✅ Database module imports successfully')"
        python -c "import config; print('✅ Config module imports successfully')"
        echo "✅ All import tests passed"
    
    - name: Validate Docker image
      run: |
        echo "🐳 Validating Docker image..."
        # Pull the just-built image (using lowercase repository name)
        docker pull ghcr.io/qsor27/futurestradinglog:latest
        
        # Quick container test (without full startup)
        docker run --rm ghcr.io/qsor27/futurestradinglog:latest python -c "import app; print('✅ Container Python environment OK')"
        echo "✅ Docker image validation passed"
